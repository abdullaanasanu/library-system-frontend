[{"/home/abdulla/Desktop/MERN Training/react/my-app/src/index.js":"1","/home/abdulla/Desktop/MERN Training/react/my-app/src/App.js":"2","/home/abdulla/Desktop/MERN Training/react/my-app/src/reportWebVitals.js":"3","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/layout/TemplateLayout.js":"4","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/layout/LayoutNavbar.js":"5","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/layout/LayoutClassNavbar.js":"6","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/profile/index.js":"7","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/profile/SignUp.js":"8","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/profile/Login.js":"9","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/LoginRoute.js":"10","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/MainRoute.js":"11","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/SignUpRoute.js":"12","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/BooksRoute.js":"13","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/StudentRoute.js":"14","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/ProfileRoute.js":"15","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/CounterRoute.js":"16"},{"size":500,"mtime":1608955429896,"results":"17","hashOfConfig":"18"},{"size":2378,"mtime":1609560495306,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1608446666094,"results":"20","hashOfConfig":"18"},{"size":451,"mtime":1608963080468,"results":"21","hashOfConfig":"18"},{"size":1149,"mtime":1608454572189,"results":"22","hashOfConfig":"18"},{"size":2113,"mtime":1609050047784,"results":"23","hashOfConfig":"18"},{"size":427,"mtime":1608954499351,"results":"24","hashOfConfig":"18"},{"size":3736,"mtime":1608961402272,"results":"25","hashOfConfig":"18"},{"size":3301,"mtime":1608973425423,"results":"26","hashOfConfig":"18"},{"size":978,"mtime":1608973194727,"results":"27","hashOfConfig":"18"},{"size":1262,"mtime":1608974994543,"results":"28","hashOfConfig":"18"},{"size":982,"mtime":1608974498379,"results":"29","hashOfConfig":"18"},{"size":13754,"mtime":1609043276467,"results":"30","hashOfConfig":"18"},{"size":16280,"mtime":1609046063020,"results":"31","hashOfConfig":"18"},{"size":2171,"mtime":1609051025076,"results":"32","hashOfConfig":"18"},{"size":736,"mtime":1609560996701,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"j46x6m",{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abdulla/Desktop/MERN Training/react/my-app/src/index.js",[],["76","77"],"/home/abdulla/Desktop/MERN Training/react/my-app/src/App.js",["78","79","80","81","82","83","84","85","86"],"/home/abdulla/Desktop/MERN Training/react/my-app/src/reportWebVitals.js",[],"/home/abdulla/Desktop/MERN Training/react/my-app/src/components/layout/TemplateLayout.js",["87","88","89","90","91"],"import { Layout } from 'antd';\nimport LayoutClassNavbar from './LayoutClassNavbar';\nimport LayoutNavbar from './LayoutNavbar';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction TemplateLayout(props) {\n    return (\n        <Layout>\n            {/* <LayoutNavbar title=\"My React App\" /> */}\n            <LayoutClassNavbar isLoggedIn={props.isLoggedIn} />\n            {props.children}\n        </Layout>\n    )\n}\n\nexport default TemplateLayout;","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/layout/LayoutNavbar.js",[],"/home/abdulla/Desktop/MERN Training/react/my-app/src/components/layout/LayoutClassNavbar.js",["92","93"],"import React, { Fragment } from 'react';\nimport { Nav, NavDropdown, Navbar } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal } from \"antd\";\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Redirect, Link } from 'react-router-dom'\n\nconst { confirm } = Modal;\n\nexport default class LayoutClassNavbar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"Library System\",\n            redirect: false\n        }\n    }\n\n    logoutConfirm = () => {\n        let _this = this;\n        confirm({\n            title: 'Are you sure to logout?',\n            icon: <ExclamationCircleOutlined />,\n            // content: 'Some descriptions',\n            onOk() {\n              window.localStorage.removeItem('token')\n              _this.setState({ redirect: true })\n            },\n            onCancel() {\n              console.log('Cancel');\n            },\n        });\n    }\n\n    render () {\n        if (this.state.redirect) {\n            return <Redirect to=\"/login\" />\n        }\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/\">{this.state.name}</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/books\">Books</Nav.Link>\n                    <Nav.Link href=\"/students\">Student</Nav.Link>\n                    <Nav.Link href=\"/profile\">Profile</Nav.Link>\n                    </Nav>\n                    {this.props.isLoggedIn ? (\n                        <Nav.Link onClick={this.logoutConfirm}>Logout</Nav.Link>\n                    ): (\n                        <Fragment>\n                            <Nav.Link href=\"/login\">Login</Nav.Link>\n                            <Nav.Link href=\"/sign-up\">Sign Up</Nav.Link>\n                        </Fragment>\n                    )}\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n\n}\n\n// export default LayoutClassNavbar;","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/profile/index.js",["94"],"import React, { Fragment, Component } from 'react'\nimport { Avatar } from 'antd';\nimport { UserOutlined } from '@ant-design/icons'\n\nexport default class Profile extends Component {\n    render() {\n        return (\n            <Fragment>\n                <Avatar size=\"large\" src=\"https://cdn.pixabay.com/photo/2020/12/16/10/44/cat-5836297__340.jpg\" />\n                <h1>My Profile</h1>\n            </Fragment>\n        )\n    }\n}","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/profile/SignUp.js",["95","96","97","98","99"],"import React from \"react\";\nimport { Fragment } from \"react\";\nimport { Form, Input, Button, Checkbox, Col, Result } from 'antd';\nimport { Container, Row } from \"react-bootstrap\";\nimport axios from 'axios';\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nexport default class SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            username: 'demo',\n            password: '',\n            showResult: false\n        }\n    }\n\n    changeField = (label, e) => {\n        console.log('eeee ', e.target.value);\n        this.setState({ [label]: e.target.value })\n    }\n\n    signUpForm = (e) => {\n        e.preventDefault()\n        console.log('form Data ', this.state);\n    }\n\n    onFinish = e => {\n        console.log('Form Values -> ', e);\n        axios.post('http://localhost:3000/user/sign-up', {\n            username: e.username,\n            email: e.email,\n            password: e.password\n        }).then((res) => {\n            console.log('Response Data ', res);\n            this.setState({ showResult: true })\n        }).catch((err) => {\n            console.log('Error -> ', err);\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h1>Sign Up</h1>\n                {this.state.showResult ? (\n                    <Result\n                        status=\"success\"\n                        title=\"Successfully Account Created!\"\n                        subTitle=\"Login to access your account that have been created!\"\n                    />\n                ) : (\n                    <Form\n                        // {...layout}\n                        name=\"basic\"\n                        // initialValues={{ remember: true }}\n                        onFinish={this.onFinish}\n                        // onFinishFailed={onFinishFailed}\n                    >\n                        <Form.Item\n                            label=\"Username\"\n                            name=\"username\"\n                            rules={[{ required: true, message: 'Please input your username!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Email\"\n                            name=\"email\"\n                            rules={[{ required: true, message: 'Please input your email!' }]}\n                        >\n                            <Input type=\"email\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[{ required: true, message: 'Please input your password!' }]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n                                        </Button>\n                        </Form.Item>\n                    </Form>\n                )}\n                {/* <form onSubmit={this.signUpForm}>\n                                <input placeholder=\"Username\" value={this.state.username} onChange={(e) => this.changeField('username', e)} />\n                                <input placeholder=\"password\" value={this.state.password} onChange={(e) => this.changeField('password', e)} />\n                                <button>Submit</button>\n                            </form> */}\n                \n\n            </Fragment>\n        )\n    }\n}","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/profile/Login.js",["100","101","102","103","104"],"import React from \"react\";\nimport { Fragment } from \"react\";\nimport { Form, Input, Button, Checkbox, Col, Alert } from 'antd';\nimport { Container, Row } from \"react-bootstrap\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom'\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            showError: false,\n            redirect: false\n        }\n    }\n\n    onFinish = e => {\n        console.log('Form Values -> ', e);\n        axios.post('http://localhost:3000/user/login', {\n            email: e.email,\n            password: e.password\n        }).then((res) => {\n            console.log('Response Data ', res.data.token);\n            window.localStorage.setItem('token', res.data.token)\n            this.setState({ redirect: true})\n            // this.props.logIn();\n        }).catch((err) => {\n            console.log('Error -> ', err);\n            this.setState({showError: true})\n        })\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/\" />\n        }\n        return (\n            <Fragment>\n                <h1>LogIn</h1>\n                {/* <form onSubmit={this.signUpForm}>\n                                <input placeholder=\"Username\" value={this.state.username} onChange={(e) => this.changeField('username', e)} />\n                                <input placeholder=\"password\" value={this.state.password} onChange={(e) => this.changeField('password', e)} />\n                                <button>Submit</button>\n                            </form> */}\n                {this.state.showError && (\n                    <Alert\n                        message=\"Login Failed!\"\n                        description=\"Invalid Email & Password\"\n                        type=\"error\"\n                        showIcon\n                        style={{ marginBottom: '20px'}}\n                    />\n                )}\n                <Form\n                    // {...layout}\n                    name=\"basic\"\n                    // initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                // onFinishFailed={onFinishFailed}\n                >\n\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                        rules={[{ required: true, message: 'Please input your email!' }]}\n                    >\n                        <Input type=\"email\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your password!' }]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            LogIn\n                                    </Button>\n                    </Form.Item>\n                </Form>\n\n            </Fragment>\n        )\n    }\n}","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/LoginRoute.js",[],"/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/MainRoute.js",["105","106","107","108","109","110","111","112"],"import React, { Fragment } from \"react\";\nimport TemplateLayout from \"../layout/TemplateLayout\";\nimport Profile from '../profile';\n// import SignUp from \"../profile/SignUp\";\nimport 'antd/dist/antd.css';\n// import Login from \"./components/profile/Login\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect} from 'react-router-dom'\n// import LoginRoute from \"./components/routes/LoginRoute\";\n\nclass MainRoute extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      redirect: false\n    }\n  }\n\n  componentDidMount() {\n    if (typeof window.localStorage.token !== 'undefined' && window.localStorage.token !== '' ) {\n      this.setState({ isLoggedIn: true })\n    }else{\n      this.setState({ redirect: true })\n    }\n    console.log('token' ,window.localStorage.token);\n  }\n\n  loggedIn = () => {\n    this.setState({ isLoggedIn: true })\n  }\n\n  render () {\n    if (this.state.redirect) {\n      console.log('state ', this.state.redirect);\n      return <Redirect to=\"/login\" />\n    }\n    return (\n        <TemplateLayout isLoggedIn={this.state.isLoggedIn}>\n          <Profile />\n        </TemplateLayout>\n    );\n  }\n}\n\nexport default MainRoute;\n","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/SignUpRoute.js",[],"/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/BooksRoute.js",["113","114","115","116","117","118","119"],"import React, { Fragment } from \"react\";\nimport axios from 'axios'\nimport TemplateLayout from \"../layout/TemplateLayout\";\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Checkbox, Alert, Select, message, Table, Modal } from 'antd';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom'\n\nconst { Option } = Select;\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nclass BooksRoute extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n            redirect: false,\n            authors: [],\n            categories: [],\n            books: [],\n            isAuthorLoading: true,\n            visibleAddModal: false,\n            visibleUpdateModal: false,\n            updateData: {},\n            updateComponent: ''\n        }\n    }\n\n    componentDidMount() {\n        if (typeof window.localStorage.token !== 'undefined' && window.localStorage.token !== '') {\n            this.setState({ isLoggedIn: true })\n        } else {\n            this.setState({ redirect: true })\n        }\n        console.log('token', window.localStorage.token);\n        axios.get('http://localhost:3000/author/list')\n            .then((res) => {\n                console.log('Authors Data -> ', res.data.authors);\n                this.setState({ authors: res.data.authors, isAuthorLoading: false })\n            })\n        axios.get('http://localhost:3000/category/list')\n            .then((res) => {\n                console.log('Category Data -> ', res.data.categories);\n                this.setState({ categories: res.data.categories })\n            })\n        axios.get('http://localhost:3000/book/list')\n            .then((res) => {\n                console.log('Book Data -> ', res.data.books);\n                this.setState({ books: res.data.books })\n            })\n    }\n\n    loggedIn = () => {\n        this.setState({ isLoggedIn: true })\n    }\n\n    updateBook = (id, data) => {\n        console.log('Update ID -> ', id);\n        this.setState({\n            visibleUpdateModal: true,\n            updateData: data,\n            updateComponent: <UpdateBook authors={this.state.authors} categories={this.state.categories} data={data} />\n        })\n    }\n\n    deleteBook = (id) => {\n        console.log('Delete ID -> ', id);\n    }\n\n    showAddModal = () => {\n        this.setState({\n            visibleAddModal: true,\n        });\n    };\n\n    handleCancel = () => {\n        this.setState({\n            visibleAddModal: false,\n            visibleUpdateModal: false,\n            updateData: {},\n            updateComponent: ''\n        })\n    }\n\n    render() {\n        if (this.state.redirect) {\n            console.log('state ', this.state.redirect);\n            return <Redirect to=\"/login\" />\n        }\n        return (\n            <TemplateLayout isLoggedIn={this.state.isLoggedIn}>\n                <ListBook books={this.state.books} updateBook={this.updateBook} deleteBook={this.deleteBook} showAddModal={this.showAddModal} />\n                <Modal\n                    visible={this.state.visibleAddModal}\n                    title=\"Add Book\"\n                    // onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        // <Button key=\"back\" onClick={this.handleCancel}>\n                        // Return\n                        // </Button>,\n                        // <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n                        // Submit\n                        // </Button>,\n                    ]}\n                >\n                    <AddBook authors={this.state.authors} categories={this.state.categories} />\n                </Modal>\n                <Modal\n                    visible={this.state.visibleUpdateModal}\n                    title=\"Update Book\"\n                    // onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        // <Button key=\"back\" onClick={this.handleCancel}>\n                        // Return\n                        // </Button>,\n                        // <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n                        // Submit\n                        // </Button>,\n                    ]}\n                >\n                    {this.state.updateComponent}\n                </Modal>\n            </TemplateLayout>\n        );\n    }\n}\n\nclass AddBook extends React.Component {\n\n    onFinish = e => {\n        console.log('Add Book Data --> ', e);\n        axios.post('http://localhost:3000/book/add', {\n            name: e.name,\n            authorId: e.author,\n            categoryId: e.category\n        }).then((res) => {\n            message.success('Book Added');\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Container>\n                    <Row>\n                        <Col>\n                            {/* <h1>Add Book</h1> */}\n                            <Form\n                                // {...layout}\n                                name=\"basic\"\n                                // initialValues={{ remember: true }}\n                                onFinish={this.onFinish}\n                            // onFinishFailed={onFinishFailed}\n                            >\n\n                                <Form.Item\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Author\"\n                                    name=\"author\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a option and change input text above\"\n                                        onChange={this.onAuthorChange}\n                                        allowClear\n                                    >\n                                        {this.props.authors.map(e =>\n                                            <Option value={e.id}>{e.name}</Option>\n                                        )}\n                                    </Select>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Category\"\n                                    name=\"category\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a option and change input text above\"\n                                        onChange={this.onAuthorChange}\n                                        allowClear\n                                    >\n                                        {this.props.categories.map(e =>\n                                            <Option value={e.id}>{e.name}</Option>\n                                        )}\n                                    </Select>\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" block size=\"large\">\n                                        Add\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </Fragment>\n        )\n    }\n}\n\n\nclass UpdateBook extends React.Component {\n\n    onFinish = e => {\n        console.log('Add Book Data --> ', e);\n        axios.post('http://localhost:3000/book/add', {\n            name: e.name,\n            authorId: e.author,\n            categoryId: e.category\n        }).then((res) => {\n            message.success('Book Added');\n        })\n    }\n\n    render() {\n        console.log('Update Data in Comp -> ', this.props);\n        return (\n            <Fragment>\n                <Container>\n                    <Row>\n                        <Col>\n                            {/* <h1>Add Book</h1> */}\n                            <Form\n                                // {...layout}\n                                name=\"basic\"\n                                initialValues={{ name: this.props.data.name }}\n                                onFinish={this.onFinish}\n                            // onFinishFailed={onFinishFailed}\n                            >\n\n                                <Form.Item\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Author\"\n                                    name=\"author\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a option and change input text above\"\n                                        onChange={this.onAuthorChange}\n                                        allowClear\n                                    >\n                                        {this.props.authors.map(e =>\n                                            <Option value={e.id}>{e.name}</Option>\n                                        )}\n                                    </Select>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Category\"\n                                    name=\"category\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a option and change input text above\"\n                                        onChange={this.onAuthorChange}\n                                        allowClear\n                                    >\n                                        {this.props.categories.map(e =>\n                                            <Option value={e.id}>{e.name}</Option>\n                                        )}\n                                    </Select>\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" block size=\"large\">\n                                        Add\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </Fragment>\n        )\n    }\n}\n\n\nclass ListBook extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookTableColumn: [\n                {\n                    title: 'Name',\n                    dataIndex: 'name',\n                    key: 'name'\n                },\n                {\n                    title: 'Author',\n                    dataIndex: 'author',\n                    key: 'author',\n                    render: (text, record, index) => {\n                        return <p>{record.author.name}</p>\n                    }\n                },\n                {\n                    title: 'Category',\n                    dataIndex: 'category',\n                    key: 'category',\n                    render: (text, record, index) => {\n                        if (record.category !== null) {\n                            return <p>{record.category.name}</p>\n                        }else{\n                            return <p>NIL</p>\n                        }\n                    }\n                },\n                {\n                    title: 'Action',\n                    dataIndex: 'action',\n                    key: 'action',\n                    render: (text, record, index) => {\n                        return (\n                            <Fragment>\n                                <Button type=\"primary\" onClick={() => this.props.updateBook(record._id, record)}>Update</Button><Button type=\"danger\" style={{ marginLeft: 5 }} onClick={() => this.props.deleteBook(record._id)}>Delete</Button>\n                            </Fragment>\n                        )\n                    }\n                }\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h1>List Book</h1>\n                            <Button type=\"primary\" size=\"large\" onClick={this.props.showAddModal} style={{ position: 'absolute', top: 15, right: 20 }}>Add Book</Button>\n                            <Table columns={this.state.bookTableColumn} dataSource={this.props.books} />\n                        </Col>\n                    </Row>\n                </Container>\n            </Fragment>\n        )\n    }\n}\n\nexport default BooksRoute;\n","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/StudentRoute.js",["120","121","122","123","124","125","126","127"],"import React, { Fragment } from \"react\";\nimport axios from 'axios'\nimport TemplateLayout from \"../layout/TemplateLayout\";\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Checkbox, Alert, Select, message, Table, Modal } from 'antd';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom'\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport _ from 'lodash';\n\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nclass StudentRoute extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n            redirect: false,\n            authors: [],\n            categories: [],\n            students: [],\n            isAuthorLoading: true,\n            visibleAddModal: false,\n            visibleUpdateModal: false,\n            updateData: {},\n            updateComponent: '',\n            studentTableColumn: [\n                {\n                    title: 'Name',\n                    dataIndex: 'name',\n                    key: 'name'\n                },\n                {\n                    title: 'Admission No.',\n                    dataIndex: 'admissionNo',\n                    key: 'admissionNo'\n                },\n                {\n                    title: 'Action',\n                    dataIndex: 'action',\n                    key: 'action',\n                    render: (text, record, index) => {\n                        return (\n                            <Fragment>\n                                <Button type=\"primary\" onClick={() => this.props.updateStudent(record._id, record)}>Update</Button><Button type=\"danger\" style={{ marginLeft: 5 }} onClick={() => this.props.deleteStudent(record._id)}>Delete</Button>\n                            </Fragment>\n                        )\n                    }\n                }\n            ]\n        }\n    }\n\n    componentDidMount() {\n        if (typeof window.localStorage.token !== 'undefined' && window.localStorage.token !== '') {\n            this.setState({ isLoggedIn: true })\n        } else {\n            this.setState({ redirect: true })\n        }\n        console.log('token', window.localStorage.token);\n        axios.get('http://localhost:3000/author/list')\n            .then((res) => {\n                console.log('Authors Data -> ', res.data.authors);\n                this.setState({ authors: res.data.authors, isAuthorLoading: false })\n            })\n        axios.get('http://localhost:3000/category/list')\n            .then((res) => {\n                console.log('Category Data -> ', res.data.categories);\n                this.setState({ categories: res.data.categories })\n            })\n        axios.get('http://localhost:3000/student/list')\n            .then((res) => {\n                console.log('Student Data -> ', res.data.students);\n                this.setState({ students: res.data.students })\n            })\n    }\n\n    loggedIn = () => {\n        this.setState({ isLoggedIn: true })\n    }\n\n    updateStudent = (id, data) => {\n        console.log('Update ID -> ', id);\n        this.setState({\n            visibleUpdateModal: true,\n            updateData: data,\n            updateComponent: <UpdateStudent authors={this.state.authors} categories={this.state.categories} data={data} />\n        })\n    }\n\n    deleteStudent = (id) => {\n        console.log('Delete ID -> ', id);\n        let _this = this;\n        confirm({\n            title: 'Are you sure delete this student?',\n            icon: <ExclamationCircleOutlined />,\n            // content: 'Some descriptions',\n            okText: 'Sure',\n            okType: 'danger',\n            cancelText: 'Not Now',\n            onOk() {\n                console.log('OK');\n                _this.confirmDeleteStudent(id)\n            },\n            onCancel() {\n              console.log('Cancel');\n            },\n        });\n    }\n\n    confirmDeleteStudent = (id) => {\n        let _this = this;\n        axios.delete('http://localhost:3000/student/remove/'+id)\n            .then((res) => {\n                message.success('Student Removed!')\n                let studentList = _.reject(this.state.students, {\n                    id: id\n                })\n                console.log('Updated Student List', studentList);\n                _this.setState({\n                    students: studentList\n                })\n            })\n    }\n\n    showAddModal = () => {\n        this.setState({\n            visibleAddModal: true,\n        });\n    };\n\n    handleCancel = () => {\n        this.setState({\n            visibleAddModal: false,\n            visibleUpdateModal: false,\n            updateData: {},\n            updateComponent: ''\n        })\n    }\n\n    addStudentAction = (newStudentData) => {\n        console.log('data ', newStudentData);\n        let StudentList = this.state.students;\n        StudentList.push(newStudentData)\n        this.setState({\n            students: StudentList\n        })\n    }\n\n    render() {\n        console.log('studentttt ', this.state.students);\n        if (this.state.redirect) {\n            console.log('state ', this.state.redirect);\n            return <Redirect to=\"/login\" />\n        }\n        return (\n            <TemplateLayout isLoggedIn={this.state.isLoggedIn}>\n                {/* <ListStudent students={this.state.students} updateStudent={this.updateStudent} deleteStudent={this.deleteStudent} showAddModal={this.showAddModal} /> */}\n                <Container>\n                    <Row>\n                        <Col>\n                            <h1>List Student</h1>\n                            <Button type=\"primary\" size=\"large\" onClick={this.showAddModal} style={{ position: 'absolute', top: 15, right: 20 }}>Add Student</Button>\n                            {/* <Table columns={this.state.studentTableColumn} dataSource={this.state.students} /> */}\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Admission No.</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.students.map( e => {\n                                        return (\n                                            <tr>\n                                                <td>{e.name}</td>\n                                                <td>{e.admissionNo}</td>\n                                                <td>\n                                                    <Button type=\"primary\" onClick={() => this.updateStudent(e.id, e)}>Update</Button><Button type=\"danger\" style={{ marginLeft: 5 }} onClick={() => this.deleteStudent(e.id)}>Delete</Button>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </table>\n                        </Col>\n                    </Row>\n                </Container>\n                <Modal\n                    visible={this.state.visibleAddModal}\n                    title=\"Add Student\"\n                    // onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        // <Button key=\"back\" onClick={this.handleCancel}>\n                        // Return\n                        // </Button>,\n                        // <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n                        // Submit\n                        // </Button>,\n                    ]}\n                >\n                    <AddStudent authors={this.state.authors} categories={this.state.categories} addStudentAction={this.addStudentAction} />\n                </Modal>\n                <Modal\n                    visible={this.state.visibleUpdateModal}\n                    title=\"Update Student\"\n                    // onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        // <Button key=\"back\" onClick={this.handleCancel}>\n                        // Return\n                        // </Button>,\n                        // <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n                        // Submit\n                        // </Button>,\n                    ]}\n                >\n                    {this.state.updateComponent}\n                </Modal>\n            </TemplateLayout>\n        );\n    }\n}\n\nclass AddStudent extends React.Component {\n\n    onFinish = e => {\n        console.log('Add Student Data --> ', e);\n        axios.post('http://localhost:3000/student/add', {\n            name: e.name,\n            admissionNo: e.admissionNo\n        }).then((res) => {\n            message.success('Student Added');\n            this.props.addStudentAction({\n                id: res.data.id,\n                name: e.name,\n                admissionNo: e.admissionNo\n            })\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Container>\n                    <Row>\n                        <Col>\n                            {/* <h1>Add Student</h1> */}\n                            <Form\n                                // {...layout}\n                                name=\"basic\"\n                                // initialValues={{ remember: true }}\n                                onFinish={this.onFinish}\n                            // onFinishFailed={onFinishFailed}\n                            >\n\n                                <Form.Item\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Admission No.\"\n                                    name=\"admissionNo\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" block size=\"large\">\n                                        Add\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </Fragment>\n        )\n    }\n}\n\n\nclass UpdateStudent extends React.Component {\n\n    onFinish = e => {\n        console.log('Add Student Data --> ', e);\n        axios.post('http://localhost:3000/book/add', {\n            name: e.name,\n            authorId: e.author,\n            categoryId: e.category\n        }).then((res) => {\n            message.success('Student Added');\n        })\n    }\n\n    render() {\n        console.log('Update Data in Comp -> ', this.props);\n        return (\n            <Fragment>\n                <Container>\n                    <Row>\n                        <Col>\n                            {/* <h1>Add Student</h1> */}\n                            <Form\n                                // {...layout}\n                                name=\"basic\"\n                                initialValues={{ name: this.props.data.name }}\n                                onFinish={this.onFinish}\n                            // onFinishFailed={onFinishFailed}\n                            >\n\n                                <Form.Item\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Author\"\n                                    name=\"author\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a option and change input text above\"\n                                        onChange={this.onAuthorChange}\n                                        allowClear\n                                    >\n                                        {this.props.authors.map(e =>\n                                            <Option value={e.id}>{e.name}</Option>\n                                        )}\n                                    </Select>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Category\"\n                                    name=\"category\"\n                                    rules={[{ required: true, message: 'Please input your email!' }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a option and change input text above\"\n                                        onChange={this.onAuthorChange}\n                                        allowClear\n                                    >\n                                        {this.props.categories.map(e =>\n                                            <Option value={e.id}>{e.name}</Option>\n                                        )}\n                                    </Select>\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" block size=\"large\">\n                                        Add\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </Fragment>\n        )\n    }\n}\n\n\nclass ListStudent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            studentTableColumn: [\n                {\n                    title: 'Name',\n                    dataIndex: 'name',\n                    key: 'name'\n                },\n                {\n                    title: 'Admission No.',\n                    dataIndex: 'admissionNo',\n                    key: 'admissionNo'\n                },\n                {\n                    title: 'Action',\n                    dataIndex: 'action',\n                    key: 'action',\n                    render: (text, record, index) => {\n                        return (\n                            <Fragment>\n                                <Button type=\"primary\" onClick={() => this.props.updateStudent(record._id, record)}>Update</Button><Button type=\"danger\" style={{ marginLeft: 5 }} onClick={() => this.props.deleteStudent(record._id)}>Delete</Button>\n                            </Fragment>\n                        )\n                    }\n                }\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h1>List Student</h1>\n                            <Button type=\"primary\" size=\"large\" onClick={this.props.showAddModal} style={{ position: 'absolute', top: 15, right: 20 }}>Add Student</Button>\n                            <Table columns={this.state.studentTableColumn} dataSource={this.props.students} />\n                        </Col>\n                    </Row>\n                </Container>\n            </Fragment>\n        )\n    }\n}\n\nexport default StudentRoute;\n","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/ProfileRoute.js",["128","129","130","131","132","133","134","135","136"],"import React, { Fragment } from \"react\";\nimport TemplateLayout from \"../layout/TemplateLayout\";\nimport Profile from '../profile';\n// import SignUp from \"../profile/SignUp\";\nimport 'antd/dist/antd.css';\n// import Login from \"./components/profile/Login\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect} from 'react-router-dom'\nimport axios from \"axios\";\n// import LoginRoute from \"./components/routes/LoginRoute\";\n\nclass ProfileRoute extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      redirect: false,\n      profileData: {}\n    }\n  }\n\n  componentDidMount() {\n    if (typeof window.localStorage.token !== 'undefined' && window.localStorage.token !== '' ) {\n      this.setState({ isLoggedIn: true })\n      axios.get('http://localhost:3000/user/profile', {\n          headers: {\n              Authorization: window.localStorage.token\n          }\n      })\n        .then((res) => {\n            console.log('Profile Data -> ', res.data);\n            this.setState({ profileData: res.data });\n        })\n        .catch((err) => {\n            console.log('Profile Error ', err.response.data.code);\n            if (err.response.data.code === 1) {\n                localStorage.removeItem('token')\n                this.setState({ redirect: true })\n            }\n        })\n    }else{\n      this.setState({ redirect: true })\n    }\n    console.log('token' ,window.localStorage.token);\n  }\n\n  loggedIn = () => {\n    this.setState({ isLoggedIn: true })\n  }\n\n  render () {\n    if (this.state.redirect) {\n      console.log('state ', this.state.redirect);\n      return <Redirect to=\"/login\" />\n    }\n    return (\n        <TemplateLayout isLoggedIn={this.state.isLoggedIn}>\n            <div style={{textAlign: 'center'}}>\n                <h1>Username: {typeof this.state.profileData.username !== 'undefined' && this.state.profileData.username}</h1>\n                <h3>Email: {typeof this.state.profileData.email !== 'undefined' && this.state.profileData.email}</h3>\n            </div>\n        </TemplateLayout>\n    );\n  }\n}\n\nexport default ProfileRoute;\n","/home/abdulla/Desktop/MERN Training/react/my-app/src/components/routes/CounterRoute.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":22},{"ruleId":"141","severity":1,"message":"146","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"141","severity":1,"message":"147","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":14},{"ruleId":"141","severity":1,"message":"148","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":13},{"ruleId":"141","severity":1,"message":"149","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":8,"column":15,"nodeType":"143","messageId":"144","endLine":8,"endColumn":24},{"ruleId":"141","severity":1,"message":"151","line":8,"column":26,"nodeType":"143","messageId":"144","endLine":8,"endColumn":29},{"ruleId":"141","severity":1,"message":"152","line":9,"column":49,"nodeType":"143","messageId":"144","endLine":9,"endColumn":53},{"ruleId":"141","severity":1,"message":"153","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":20},{"ruleId":"141","severity":1,"message":"154","line":5,"column":9,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"141","severity":1,"message":"155","line":5,"column":17,"nodeType":"143","messageId":"144","endLine":5,"endColumn":23},{"ruleId":"141","severity":1,"message":"156","line":5,"column":25,"nodeType":"143","messageId":"144","endLine":5,"endColumn":30},{"ruleId":"141","severity":1,"message":"157","line":5,"column":32,"nodeType":"143","messageId":"144","endLine":5,"endColumn":39},{"ruleId":"141","severity":1,"message":"158","line":2,"column":15,"nodeType":"143","messageId":"144","endLine":2,"endColumn":26},{"ruleId":"141","severity":1,"message":"152","line":6,"column":20,"nodeType":"143","messageId":"144","endLine":6,"endColumn":24},{"ruleId":"141","severity":1,"message":"159","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":22},{"ruleId":"141","severity":1,"message":"160","line":3,"column":31,"nodeType":"143","messageId":"144","endLine":3,"endColumn":39},{"ruleId":"141","severity":1,"message":"149","line":3,"column":41,"nodeType":"143","messageId":"144","endLine":3,"endColumn":44},{"ruleId":"141","severity":1,"message":"150","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":19},{"ruleId":"141","severity":1,"message":"151","line":4,"column":21,"nodeType":"143","messageId":"144","endLine":4,"endColumn":24},{"ruleId":"141","severity":1,"message":"161","line":7,"column":7,"nodeType":"143","messageId":"144","endLine":7,"endColumn":13},{"ruleId":"141","severity":1,"message":"160","line":3,"column":31,"nodeType":"143","messageId":"144","endLine":3,"endColumn":39},{"ruleId":"141","severity":1,"message":"149","line":3,"column":41,"nodeType":"143","messageId":"144","endLine":3,"endColumn":44},{"ruleId":"141","severity":1,"message":"150","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":19},{"ruleId":"141","severity":1,"message":"151","line":4,"column":21,"nodeType":"143","messageId":"144","endLine":4,"endColumn":24},{"ruleId":"141","severity":1,"message":"161","line":8,"column":7,"nodeType":"143","messageId":"144","endLine":8,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"149","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":7,"column":15,"nodeType":"143","messageId":"144","endLine":7,"endColumn":24},{"ruleId":"141","severity":1,"message":"151","line":7,"column":26,"nodeType":"143","messageId":"144","endLine":7,"endColumn":29},{"ruleId":"141","severity":1,"message":"162","line":8,"column":26,"nodeType":"143","messageId":"144","endLine":8,"endColumn":32},{"ruleId":"141","severity":1,"message":"163","line":8,"column":34,"nodeType":"143","messageId":"144","endLine":8,"endColumn":39},{"ruleId":"141","severity":1,"message":"164","line":8,"column":41,"nodeType":"143","messageId":"144","endLine":8,"endColumn":47},{"ruleId":"141","severity":1,"message":"152","line":8,"column":49,"nodeType":"143","messageId":"144","endLine":8,"endColumn":53},{"ruleId":"141","severity":1,"message":"160","line":5,"column":31,"nodeType":"143","messageId":"144","endLine":5,"endColumn":39},{"ruleId":"141","severity":1,"message":"165","line":5,"column":41,"nodeType":"143","messageId":"144","endLine":5,"endColumn":46},{"ruleId":"141","severity":1,"message":"162","line":7,"column":27,"nodeType":"143","messageId":"144","endLine":7,"endColumn":33},{"ruleId":"141","severity":1,"message":"163","line":7,"column":35,"nodeType":"143","messageId":"144","endLine":7,"endColumn":40},{"ruleId":"141","severity":1,"message":"164","line":7,"column":42,"nodeType":"143","messageId":"144","endLine":7,"endColumn":48},{"ruleId":"141","severity":1,"message":"152","line":7,"column":50,"nodeType":"143","messageId":"144","endLine":7,"endColumn":54},{"ruleId":"141","severity":1,"message":"166","line":11,"column":7,"nodeType":"143","messageId":"144","endLine":11,"endColumn":17},{"ruleId":"141","severity":1,"message":"160","line":5,"column":31,"nodeType":"143","messageId":"144","endLine":5,"endColumn":39},{"ruleId":"141","severity":1,"message":"165","line":5,"column":41,"nodeType":"143","messageId":"144","endLine":5,"endColumn":46},{"ruleId":"141","severity":1,"message":"162","line":7,"column":27,"nodeType":"143","messageId":"144","endLine":7,"endColumn":33},{"ruleId":"141","severity":1,"message":"163","line":7,"column":35,"nodeType":"143","messageId":"144","endLine":7,"endColumn":40},{"ruleId":"141","severity":1,"message":"164","line":7,"column":42,"nodeType":"143","messageId":"144","endLine":7,"endColumn":48},{"ruleId":"141","severity":1,"message":"152","line":7,"column":50,"nodeType":"143","messageId":"144","endLine":7,"endColumn":54},{"ruleId":"141","severity":1,"message":"166","line":14,"column":7,"nodeType":"143","messageId":"144","endLine":14,"endColumn":17},{"ruleId":"141","severity":1,"message":"167","line":382,"column":7,"nodeType":"143","messageId":"144","endLine":382,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"146","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"141","severity":1,"message":"149","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":7,"column":15,"nodeType":"143","messageId":"144","endLine":7,"endColumn":24},{"ruleId":"141","severity":1,"message":"151","line":7,"column":26,"nodeType":"143","messageId":"144","endLine":7,"endColumn":29},{"ruleId":"141","severity":1,"message":"162","line":8,"column":26,"nodeType":"143","messageId":"144","endLine":8,"endColumn":32},{"ruleId":"141","severity":1,"message":"163","line":8,"column":34,"nodeType":"143","messageId":"144","endLine":8,"endColumn":39},{"ruleId":"141","severity":1,"message":"164","line":8,"column":41,"nodeType":"143","messageId":"144","endLine":8,"endColumn":47},{"ruleId":"141","severity":1,"message":"152","line":8,"column":49,"nodeType":"143","messageId":"144","endLine":8,"endColumn":53},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'TemplateLayout' is defined but never used.","'Profile' is defined but never used.","'SignUp' is defined but never used.","'Login' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.","'LayoutNavbar' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Content' is assigned a value but never used.","'NavDropdown' is defined but never used.","'UserOutlined' is defined but never used.","'Checkbox' is defined but never used.","'layout' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Alert' is defined but never used.","'tailLayout' is assigned a value but never used.","'ListStudent' is defined but never used.","no-global-assign","no-unsafe-negation"]